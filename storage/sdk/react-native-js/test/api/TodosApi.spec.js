/*
 * Todo API
 * API documentation for Todo management
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.47
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TodoApi);
  }
}(this, function(expect, TodoApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TodoApi.TodosApi();
  });

  describe('(package)', function() {
    describe('TodosApi', function() {
      describe('deleteTodo', function() {
        it('should call deleteTodo successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteTodo call
          /*

          instance.deleteTodo(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getTodoById', function() {
        it('should call getTodoById successfully', function(done) {
          // TODO: uncomment, update parameter values for getTodoById call and complete the assertions
          /*

          instance.getTodoById(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(TodoApi.Todo);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getTodosList', function() {
        it('should call getTodosList successfully', function(done) {
          // TODO: uncomment getTodosList call and complete the assertions
          /*

          instance.getTodosList(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Array);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(TodoApi.Todo);
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('storeTodo', function() {
        it('should call storeTodo successfully', function(done) {
          // TODO: uncomment, update parameter values for storeTodo call and complete the assertions
          /*

          instance.storeTodo(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(TodoApi.Todo);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateTodo', function() {
        it('should call updateTodo successfully', function(done) {
          // TODO: uncomment, update parameter values for updateTodo call and complete the assertions
          /*

          instance.updateTodo(body, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(TodoApi.Todo);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
