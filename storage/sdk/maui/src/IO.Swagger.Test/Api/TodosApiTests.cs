/* 
 * Todo API
 *
 * API documentation for Todo management
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@example.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing TodosApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TodosApiTests
    {
        private TodosApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TodosApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TodosApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TodosApi
            //Assert.IsInstanceOfType(typeof(TodosApi), instance, "instance is a TodosApi");
        }

        /// <summary>
        /// Test DeleteTodo
        /// </summary>
        [Test]
        public void DeleteTodoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //instance.DeleteTodo(id);
            
        }
        /// <summary>
        /// Test GetTodoById
        /// </summary>
        [Test]
        public void GetTodoByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetTodoById(id);
            //Assert.IsInstanceOf<Todo> (response, "response is Todo");
        }
        /// <summary>
        /// Test GetTodosList
        /// </summary>
        [Test]
        public void GetTodosListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetTodosList();
            //Assert.IsInstanceOf<List<Todo>> (response, "response is List<Todo>");
        }
        /// <summary>
        /// Test StoreTodo
        /// </summary>
        [Test]
        public void StoreTodoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiTodosBody body = null;
            //var response = instance.StoreTodo(body);
            //Assert.IsInstanceOf<Todo> (response, "response is Todo");
        }
        /// <summary>
        /// Test UpdateTodo
        /// </summary>
        [Test]
        public void UpdateTodoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TodosIdBody body = null;
            //int? id = null;
            //var response = instance.UpdateTodo(body, id);
            //Assert.IsInstanceOf<Todo> (response, "response is Todo");
        }
    }

}
